/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

#define HYPER LC(LS(LG(LALT)))

// layers
#define DEFAULT 0
#define SYMBOL 1
#define MAGIC 2

/ {
    behaviors {
        magic: magic_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "MAGIC_HOLD_TAP";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            bindings = <&mo>, <&rgb_ug_status_macro>;
        };
    };

    macros {
        rgb_ug_status_macro: rgb_ug_status_macro_0 {
            label = "RGB_UG_STATUS";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&rgb_ug RGB_STATUS>;
        };

        bt_0: bt_profile_macro_0 {
            label = "BT_0";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&out OUT_BLE>,
                  <&bt BT_SEL 0>;
        };

        bt_1: bt_profile_macro_1 {
            label = "BT_1";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&out OUT_BLE>,
                  <&bt BT_SEL 1>;
        };

        bt_2: bt_profile_macro_2 {
            label = "BT_2";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&out OUT_BLE>,
                  <&bt BT_SEL 2>;
        };

        bt_3: bt_profile_macro_3 {
            label = "BT_3";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&out OUT_BLE>,
                  <&bt BT_SEL 3>;
        };
        select_word_left: select_word_left {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&macro_press &kp LSHFT>
                , <&macro_press &kp LCTRL>
                , <&macro_tap &kp LEFT_ARROW>;
        };
        ht_tp: holdtap_tappreferred {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAP_TAP_PREFERRED";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // |  F1   |  F2 |  F3 |  F4  |  F5  |                                                               |  F6   |  F7   |  F8  |   F9  |  F10 |
            // |  =    |  1  |  2  |  3   |  4   |  5   |                                                 |  6   |   7   |   8   |  9   |   0   |   -  |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                                                 |  Y   |   U   |   I   |  O   |   P   |   \  |
            // |  ESC  |  A  |  S  |  D   |  F   |  G   |                                                 |  H   |   J   |   K   |  L   |   ;   |   '  |
            // |   `   |  Z  |  X  |  C   |  V   |  B   | sk LSHFT | LCTRL | LOWER | | LGUI  | RCTRL | sl symbol_l  |  N   |   M   |   ,   |  .   |   /   | PGUP |
            // | MAGIC | HOME| END | LEFT | RIGHT|      | BSPC/symbol_l  | tab   | caps word  | | TAB  | RET   | SPACE |      |  UP   | DOWN  |  QMARK   |   EXCL   | PGDN |

            bindings = <        
            &kp F1         &kp F2         &kp F3        &kp F4           &kp F5                                                                                                      &kp F6          &kp F7            &kp F8         &kp F9              &kp F10
            &kp EQUAL      &kp N1         &kp N2        &kp N3           &kp N4         &kp N5                                                                               &kp N6  &kp N7          &kp N8            &kp N9         &kp N0              &kp MINUS
            &kp TAB        &kp Q          &kp W         &kp E            &kp R          &kp T                                                                                &kp Y   &kp U           &kp I             &kp O          &kp P               &kp BSLH
            &kp ESC        &ht_tp LWIN A  &ht_tp LALT S &ht_tp LCTRL D   &ht_tp LSHFT F &kp G                                                                                &kp H   &ht_tp  LSHFT J &ht_tp RCTRL K    &ht_tp RALT L  &ht_tp RWIN SEMI    &kp SQT
            &kp GRAVE      &kp Z          &kp X         &kp C            &kp V          &kp B   &sk LSHFT         &kp LCTRL    &kp LSHFT    &kp LGUI  &kp RCTRL &sl SYMBOL   &kp N   &kp M           &kp COMMA         &kp DOT        &kp FSLH            &kp PG_UP
            &magic MAGIC 0 &kp HOME       &kp END       &kp LEFT         &kp RIGHT              &lt SYMBOL BSPC    &kp TAB     &caps_word   &kp TAB   &kp RET   &kp SPACE            &kp UP          &kp DOWN          &kp QMARK      &kp EXCL            &kp PG_DN
            >;
        };

        symbol_layer {
            bindings = <
            &none            &none               &none           &none           &none                                                                                               &none         &none             &none         &none &none             
            &none            &none               &kp SQT         &kp LS(SQT)     &none           &none                                                                      &none    &none         &none             &none         &none &none
            &none            &none               &kp LT          &kp LS(N3)      &kp GT          &none                                                                      &none    &none         &none             &none         &none &none  
            &none            &none               &kp LPAR        &kp UNDER       &kp RPAR        &none                                                                      &none    &kp LC(A)     &select_word_left &none         &none &none  
            &none            &none               &kp LBKT        &kp MINUS       &kp RBKT        &none      &none      &none      &none      &none      &none      &none    &none    &none         &kp LS(HOME)      &none         &none &none         
            &none            &none               &none           &none           &none                      &none      &none      &none      &none      &none      &none             &none         &none             &none         &none &none 
            >;
        };

        magic_layer {
            bindings = <
            &bt BT_CLR        &none               &none           &none           &none                                                                                                           &none      &none      &none      &none      &bt BT_CLR_ALL
            &none             &none               &none           &none           &none           &none                                                                                &none      &none      &none      &none      &none      &none
            &none             &rgb_ug RGB_SPI     &rgb_ug RGB_SAI &rgb_ug RGB_HUI &rgb_ug RGB_BRI &rgb_ug RGB_TOG                                                                      &none      &none      &none      &none      &none      &none
            &bootloader       &rgb_ug RGB_SPD     &rgb_ug RGB_SAD &rgb_ug RGB_HUD &rgb_ug RGB_BRD &rgb_ug RGB_EFF                                                                      &none      &none      &none      &none      &none      &bootloader
            &sys_reset        &none               &none           &none           &none           &none           &bt_2     &bt_3     &none            &none     &none     &none       &none      &none      &none      &none      &none      &sys_reset
            &none             &none               &none           &none           &none                           &bt_0     &bt_1     &out OUT_USB     &none     &none     &none                  &none      &none      &none      &none      &none
            >;
        };
    };
};
